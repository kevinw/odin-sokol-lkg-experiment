(A) prioritize this list by using a game idea as a forcing function
games with depth
    flying, walking, racing inwards
    crash bandicoot-style coming outwards
    battletoads wind tunnel style procgen'd infinite 
shader reloading - see https://github.com/ThisDrunkDane/libbrew/blob/6ecefb232bc5d8d1b71fad706fc0a857da156fb6/catalog/catalog.odin for an example of using ReadDirectoryChangesW in this context
depth of field
@editor use relative mouse movement when dragging sliders
@qualityOfLife sokol's asserts could trigger a stack trace
shadow maps
@editor scene view (both this and shadow maps require similar camera work)
asset catalog: shaders, configs, images
@vim make 'float3' typo correct to 'vec3', etc, in glsl files
a set of "println" tools for the screen - temporary message, permanent message with corner
multiple window support with a scene view - essential for lkg development?
integrate sokol compute pull request
cleanup input/keys array state
shader_meta needs a cleanup. at the very least, start with package-per-shader?
    or should we just go immediately for a more late-binding approach?
undo @editor
@editor consider a switch to imgui
remove c runtime dependency from dependencies?
@editor implement a rotation gizmo based on the trackball example here: http://www.songho.ca/opengl/gl_camera.html#example2
make it very easy to say "this value lerps to this other value"
iq's warp https://www.iquilezles.org/www/articles/warp/warp.htm?utm_source=share&utm_medium=ios_app&utm_name=iossmf
consider using D3DCOMPILE_OPTIMIZATION_LEVEL0 for debug mode in sokol-"Directs the compiler to use the lowest optimization level. If you set this constant, the compiler might produce slower code but produces the code more quickly. Set this constant when you develop the shader iteratively."
compile dependencies with all optimizations
project window for assets in project @editor

(C) animation skinning
(C) sketch out a flowchart for asset generation, research assimp vs other approaches

x render a framebuffer
x render a quilt
x render a complex mesh
x optimize sdf rendering buffer
